// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apicemig.Data;

#nullable disable

namespace apicemig.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("apicemig.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("apicemig.Models.DadosCliente.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("Telefone")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("ContatoClientes");
                });

            modelBuilder.Entity("apicemig.Models.DadosCliente.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroCasa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Contrato", b =>
                {
                    b.Property<int>("MyProperty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ConsumoContrato")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MedidorId")
                        .HasColumnType("int");

                    b.Property<string>("StatusContrato")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("TipoContrato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MyProperty");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MedidorId")
                        .IsUnique();

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StatusFatura")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("Faturas");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Leitura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLeitura")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MedidorId")
                        .HasColumnType("int");

                    b.Property<int>("ValorLeitura")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedidorId");

                    b.ToTable("Leitura");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Medidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInstalacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Leituras")
                        .HasColumnType("int");

                    b.Property<int>("NumeroSerie")
                        .HasColumnType("int");

                    b.Property<string>("TipoMedidor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Medidores");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FaturaId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("FaturaId")
                        .IsUnique();

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("apicemig.Models.DadosCliente.Contato", b =>
                {
                    b.HasOne("apicemig.Models.DadosCliente.Endereco", "Endereco")
                        .WithMany("Contato")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("apicemig.Models.DadosCliente.Endereco", b =>
                {
                    b.HasOne("apicemig.Models.Cliente", "Cliente")
                        .WithMany("Endereco")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Contrato", b =>
                {
                    b.HasOne("apicemig.Models.Cliente", "Cliente")
                        .WithMany("Contrato")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apicemig.Models.DadosContrato.Medidor", "Medidor")
                        .WithOne("Contrato")
                        .HasForeignKey("apicemig.Models.DadosContrato.Contrato", "MedidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Medidor");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Fatura", b =>
                {
                    b.HasOne("apicemig.Models.DadosContrato.Contrato", "Contrato")
                        .WithMany("Fatura")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Leitura", b =>
                {
                    b.HasOne("apicemig.Models.DadosContrato.Medidor", "Medidor")
                        .WithMany("Leitura")
                        .HasForeignKey("MedidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medidor");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Pagamento", b =>
                {
                    b.HasOne("apicemig.Models.DadosContrato.Fatura", "Fatura")
                        .WithOne("Pagamento")
                        .HasForeignKey("apicemig.Models.DadosContrato.Pagamento", "FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("apicemig.Models.Cliente", b =>
                {
                    b.Navigation("Contrato");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("apicemig.Models.DadosCliente.Endereco", b =>
                {
                    b.Navigation("Contato");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Contrato", b =>
                {
                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Fatura", b =>
                {
                    b.Navigation("Pagamento")
                        .IsRequired();
                });

            modelBuilder.Entity("apicemig.Models.DadosContrato.Medidor", b =>
                {
                    b.Navigation("Contrato")
                        .IsRequired();

                    b.Navigation("Leitura");
                });
#pragma warning restore 612, 618
        }
    }
}
